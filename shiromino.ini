# This configuration file controls shiromino.
#
# You can make the game load this file via:
#
# -c <FILE>
# --configuration-file <FILE>
#
# If no configuration file is specified, the game will look for this file here (in order):
#
# (1) <executable directory>/shiromino.ini
# (2) <executable directory>/../etc/shiromino.ini
# (3) <current working directory>/shiromino.ini
# (4) $XDG_CONFIG_HOME/shiromino.ini
# (5) $HOME/.config/shiromino.ini
# (6) /usr/local/etc/shiromino.ini
# (7) /etc/shiromino.ini
#
# The first path that matches will be honored.
#
# If none match, the game will try to create a default configuration file here (in order):
#
# (1) $XDG_CONFIG_HOME/shiromino.ini
# (2) $HOME/.config/shiromino.ini
# (3) <executable directory>/shiromino.ini
#
# Section names and the key names on the left-hand side of the = are case-insensitive.
[ACCOUNT]
PLAYER_NAME = ARK
[AUDIO]
MASTER_VOLUME = 80
MUSIC_VOLUME = 90
SFX_VOLUME = 100
[PATHS]
# SHARE_PATH is a path to a directory which contains game data such as assets or the license.
# The game assumes that there is a directory within SHARE_PATH named `data`.
#
# If SHARE_PATH is left unspecified, the game will look for it here (in order):
#
# (1) <executable directory>
# (2) <executable directory>/../share/shiromino
# (3) <current working directory>
# (4) $XDG_DATA_HOME/shiromino
# (5) $HOME/.local/share/shiromino
# (6) /usr/local/share/shiromino
# (7) /usr/share/shiromino
#
# Any path in this list will match only if it contains a directory named `data`.
# The first match will be honored.
#
# If DATA_PATH is relative, the path is assumed to be relative to this configuration file.
# DATA_PATH =
# CACHE_PATH is a path to a directory which contains dynamic game data such as high scores.
#
# If CACHE_PATH is left unspecified, the game will look for it here (in order):
#
# (1) <executable directory>
# (2) <executable directory>/../var/cache/shiromino
# (3) <current working directory>
# (4) $XDG_CACHE_HOME/shiromino
# (5) $HOME/.cache/shiromino
# (6) /usr/local/var/cache/shiromino
# (7) /var/cache/shiromino
#
# Any path in this list will match only if it contains a file named `shiromino.sqlite`.
# The first match will be honored.
#
# If none match, the game will try to create the following directories and/or use them:
#
# (1) $XDG_CACHE_HOME/shiromino
# (2) $HOME/.cache/shiromino
# (3) <executable directory>
#
# If CACHE_PATH is relative, the path is assumed to be relative to this configuration file.
# CACHE_PATH =
[PLAYER_1_CONTROLLER_BINDINGS]
# X- and Y-axes can be set to any axis number, but must be different.
#
# Set AXIS_RIGHT and AXIS_DOWN to either + or -, to indicate how your controller's axes work.
#
# Normally, AXIS_X should be 0, AXIS_Y should be 1, AXIS_RIGHT and AXIS_DOWN should be +, and if
# any are omitted, the defaults shown here will be used.
#
# If the AXIS_X and AXIS_Y are the same, the default axis indices will be used.
# AXIS_X = 0
# AXIS_RIGHT = +
# AXIS_Y = 1
# AXIS_DOWN = +
#
# Directions can use buttons; just use BUTTON_LEFT = 0 for left to be button 0, for example, like
# with A/B/C/D. Buttons don't have any default settings.
BUTTON_A = 0
BUTTON_B = 3
BUTTON_C = 5
BUTTON_D = 1
BUTTON_ESCAPE = 12
BUTTON_START = 9
# A number in the interval [0, 1] that specifies the minimum analog-stick displacement for it to
# be recognized as a valid input.
DEAD_ZONE = 0.25
# You can use a controller name, reported by your OS, or an index. The game will show all
# controller names in the log, and their corresponding indices, and you can use that info here.
#
# If you have multiple controllers with the same name, the first one detected will be used, In
# that situation, you'd want to use an index if the first one detected isn't what you want.
# A controller name will be used first, then the controller index if the name wasn't found, if
# both are set here.
# There's no default settings for CONTROLLER_NAME and CONTROLLER_INDEX, so if neither are set,
# then controllers will be disabled.
# CONTROLLER_NAME = REAL ARCADE PRO.3
CONTROLLER_INDEX = 0
# Any controller hat index can be used. Index 0 is the default.
# HAT_INDEX = 0
[PLAYER_1_KEY_BINDINGS]
# Key names can be found under the "Key Name" column on: https://wiki.libsdl.org/SDL_Scancode
A = m
B = ,
C = .
D = /
UP = s
LEFT = z
DOWN = x
RIGHT = c
[SCREEN]
FULL_SCREEN = 0
# FRAME_DELAY controls the number of milliseconds to delay after drawing frames, if VSync is off.
# For "good enough" behavior that balances between low CPU usage and responsiveness, it's best to
# set it to values close to your monitor's refresh rate. Though, you can set it high enough to make
# the game run at a reduced frame rate with more lag, and reduced CPU usage.
#
# For 60 Hz, 16 or 17 is suggested, assuming the game's gameplay and graphics aren't taking much
# time on your system. Setting it to 0 will basically disable the delay between drawing frames,
# increasing CPU usage significantly (it basically takes up 100% CPU usage of one core), but has
# less lag and more consistent and accurate game frame timing.
FRAME_DELAY = 16
# When set to 1, this option enables interpolated scaling, which improves scaling by a non-integer
# factor of 480p; should be combined with enabling VIDEO_STRETCH. For now, this is only supported
# on platforms with an OpenGL Core Profile of at least OpenGL 3.3.
#
# The interpolation tries to keep the upscaled screen as close as possible to looking pixelated,
# rather than just blurry. Keep in mind that this does increase system requirements when enabled,
# and forces all graphics to use OpenGL, rather than the default SDL2 graphics API for your
# platform, which would be DirectX on Windows.
INTERPOLATE = 1
# Required and only for use while debugging FPS with V_SYNC and V_SYNC_TIME_STEP.
#
# Unused/unsupported in release builds.
#
# Set the FPS of your actual monitor here. SDL2 only provides the refresh rate as an integer, so
# non-integer refresh rates can't be detected.
# VIDEO_FPS=61.6825
V_SYNC = 0
# If this option is set to 1, and VSync is enabled, the game will update one frame per rendered
# frame; this has the effect that all modes will run at the refresh rate of your monitor.
#
# If you can set your display's refresh rate to perfectly match that of a mode's, then this setting
# will ensure behavior much like the original games' hardware. Using this setting is strongly
# discouraged for setting records if your display's refresh rate differs from the mode you're
# trying to get records in.
#
# If you're not sure if you should use this setting, you almost certainly shouldn't. But, since
# it's common for exactly/nearly 60 Hz to be supported by many systems, using this setting with the
# Pentomino modes, which all run at 60 Hz, is probably fine.
V_SYNC_TIME_STEP = 0
VIDEO_SCALE = 1
VIDEO_STRETCH = 1