jobs:
  x64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -yq build-essential cmake coreutils gcc libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libvorbis-dev libsqlite3-dev
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler:
          - clang++
          - g++
        build-type:
          - Debug
          - Release
  x64-mac-os:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - name: Install mac OS dependencies
      run: brew install bash cmake gcc libvorbis pkg-config sdl2 sdl2_image sdl2_mixer
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler:
          - clang++
          - g++
        build-type:
          - Debug
          - Release
  windows-visual-studio:
    env:
      VCPKG_RESPONSE_FILE_PATH: '${{ github.workspace }}/vcpkg-response-file'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
      shell: bash
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        appendedCacheKey: ${{ matrix.build-type }}-${{ hashFiles(env.VCPKG_RESPONSE_FILE_PATH) }}
        vcpkgArguments:  '@${{ env.VCPKG_RESPONSE_FILE_PATH }}'
        vcpkgDirectory: vcpkg
        vcpkgGitCommitId: 7db401cb1ef1fc559ec9f9ce814d064c328fd767
        vcpkgTriplet: ${{ matrix.triplet }}
    - name: Build targets
      uses: lukka/run-cmake@v3
      with:
        buildDirectory: build
        cmakeAppendedArgs: -A ${{ matrix.cmake-architecture }}
        cmakeBuildType: ${{ matrix.build-type }}
        useVcpkgToolchainFile: true
    - name: Build artifact tree
      run: |
        mkdir artifacts
        mv build/{*.dll,shiromino.exe} data LICENSE* README.md shiromino.ini artifacts
      shell: bash
    - if: matrix.build-type == 'Release'
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: shiromino-${{ matrix.triplet }}-${{ github.sha }}
        path: artifacts/*
    strategy:
      matrix:
        triplet:
          - x64-windows
          - x86-windows
        build-type:
          - Debug
          - Release
        include:
          - architecture: x64
            cmake-architecture: x64
            triplet: x64-windows
          - architecture: x86
            cmake-architecture: Win32
            triplet: x86-windows
  x64-windows-msys2:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - uses: msys2/setup-msys2@v2
    - name: Install dependencies
      run: pacman --needed --noconfirm -S cmake gcc git make mingw-w64-x86_64-{clang,dlfcn,glew,libvorbis,SDL2{,_image,_mixer}} sqlite3
      shell: msys2 {0}
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
      shell: msys2 {0}
    strategy:
      matrix:
        build-type:
          - Debug
          - Release
        compiler:
          - clang++
          - g++
name: build
on:
  - pull_request
  - push